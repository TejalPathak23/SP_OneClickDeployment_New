name: Salesforce Deploy / Validate Workflow

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Choose action"
        required: true
        default: "Deploy to Sandbox"
        type: choice
        options:
          - Deploy to Sandbox
          - Deploy to Production
          - Validate in Sandbox
          - Validate in Production

jobs:
  operate:
    name: "${{ github.event.inputs.action }}"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Salesforce CLI
        run: |
          echo "Trying npm install..."
          if npm install sfdx-cli --global; then
            echo "Installed via npm. sfdx version: $(sfdx --version)"
          else
            echo "npm install failed, downloading tarball..."
            wget -q https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz -O sfdx.tar.xz
            mkdir sfdx-cli
            tar xJf sfdx.tar.xz -C sfdx-cli --strip-components 1
            echo "PATH=$(pwd)/sfdx-cli/bin:$PATH" >> $GITHUB_ENV
            echo "Installed via download. sfdx version: $(sfdx --version)"
          fi

      # -------------------------
      # PRODUCTION: JWT auth step
      # -------------------------
      - name: Authenticate to Production Org (JWT)
        if: contains(github.event.inputs.action, 'Production')
        env:
          SF_CONSUMER_KEY: ${{ secrets.SF_CONSUMER_KEY_PROD }}
          SF_JWT_KEY_BASE64: ${{ secrets.SF_JWT_KEY_PROD_BASE64 }}
          SF_USERNAME: ${{ secrets.SF_USERNAME_PROD }}
        run: |
          echo "Writing JWT key to file..."
          # If you stored the private key as BASE64 in the secret (recommended):
          echo "$SF_JWT_KEY_BASE64" | base64 --decode > server.key
          chmod 600 server.key

          echo "Authenticating to production with JWT..."
          sfdx force:auth:jwt:grant \
            --clientid "$SF_CONSUMER_KEY" \
            --jwtkeyfile server.key \
            --username "$SF_USERNAME" \
            --instanceurl https://login.salesforce.com \
            --setalias prod \
            --setdefaultusername

          sfdx force:org:display -u prod

      # -------------------------
      # SANDBOX: JWT auth step
      # -------------------------
      - name: Authenticate to Sandbox Org (JWT)
        if: !contains(github.event.inputs.action, 'Production')
        env:
          SF_CONSUMER_KEY: ${{ secrets.SF_CONSUMER_KEY_SANDBOX }}
          SF_JWT_KEY_BASE64: ${{ secrets.SF_JWT_KEY_SANDBOX_BASE64 }}
          SF_USERNAME: ${{ secrets.SF_USERNAME_SANDBOX }}
        run: |
          echo "Writing JWT key to file..."
          echo "$SF_JWT_KEY_BASE64" | base64 --decode > server.key
          chmod 600 server.key

          echo "Authenticating to sandbox with JWT..."
          sfdx force:auth:jwt:grant \
            --clientid "$SF_CONSUMER_KEY" \
            --jwtkeyfile server.key \
            --username "$SF_USERNAME" \
            --instanceurl https://test.salesforce.com \
            --setalias sandbox \
            --setdefaultusername

          sfdx force:org:display -u sandbox

      - name: Execute Action
        run: |
          ACTION="${{ github.event.inputs.action }}"
          ORG_ALIAS=$( [[ "$ACTION" =~ Production ]] && echo "prod" || echo "sandbox" )

          if [[ "$ACTION" == Validate* ]]; then
            echo "Validating (dry-run) in $ORG_ALIAS..."
            sfdx force:source:deploy -p force-app -u "$ORG_ALIAS" --checkonly --testlevel NoTestRun
          else
            echo "Deploying to $ORG_ALIAS..."
            sfdx force:source:deploy -p force-app -u "$ORG_ALIAS" --testlevel NoTestRun
          fi
